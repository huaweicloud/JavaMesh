name: Integration Test

on:
  push:
  pull_request:
    branches:
      - master
      - develop

jobs:
  download-and-cache-middlewares:
    name: download and cache middlewares
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache middlewares
        uses: actions/cache@v3
        with:
          path: |
            apache-servicecomb-service-center-*/
            apache-zookeeper-*/
            Local-CSE-2.1.3-linux-amd64.zip
          key: ${{ runner.os }}-middlewares-${{ github.run_id }}
      - name: download middlewares
        run: |
          curl -o apache-servicecomb-service-center-2.1.0-linux-amd64.tar.gz -L https://github.com/apache/servicecomb-service-center/releases/download/v2.1.0/apache-servicecomb-service-center-2.1.0-linux-amd64.tar.gz
          tar -zxf apache-servicecomb-service-center-2.1.0-linux-amd64.tar.gz
          curl -o apache-zookeeper-3.6.3-bin.tar.gz -L https://dlcdn.apache.org/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gz
          tar -zxf apache-zookeeper-3.6.3-bin.tar.gz
          num=`ls -l | grep Local-CSE-2.1.3-linux-amd64.zip | wc -l`;
          if [ $num -eq 0 ];then
            export ROOT_PATH=$(pwd)
            bash ./sermant-integration-tests/scripts/downloadCse.sh
          fi
  package-and-cache-agent:
    name: package and cache agent
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: cache agent
        uses: actions/cache@v3
        with:
          path: sermant-agent-*/
          key: ${{ runner.os }}-agent-${{ github.run_id }}
      - name: package agent
        run: sed -i '/sermant-backend/d' pom.xml & mvn package -DskipTests -Pagent --file pom.xml
  test-for-dubbo:
    name: Test for dubbo
    runs-on: ubuntu-latest
    needs: [download-and-cache-middlewares, package-and-cache-agent]
    strategy:
      matrix:
        dubbo-version: ['2-6','2-7']
        dubbo-versions: ['0','1','3','5','6','7','8','9','10','11','12']
        include:
          - dubbo-version: '2-6'
            dubbo-versions: '2'
          - dubbo-version: '2-6'
            dubbo-versions: '4'
          - dubbo-version: '2-6'
            dubbo-versions: '10.1'
          - dubbo-version: '2-7'
            dubbo-versions: '4.1'
          - dubbo-version: '2-7'
            dubbo-versions: '13'
          - dubbo-version: '2-7'
            dubbo-versions: '14'
          - dubbo-version: '2-7'
            dubbo-versions: '15'
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: get middlewares
        uses: actions/cache@v3
        with:
          path: |
            apache-servicecomb-service-center-*/
            apache-zookeeper-*/
            Local-CSE-2.1.3-linux-amd64.zip
          key: ${{ runner.os }}-middlewares-${{ github.run_id }}
      - name: get agent
        uses: actions/cache@v3
        with:
          path: sermant-agent-*/
          key: ${{ runner.os }}-agent-${{ github.run_id }}
      - name: start sc
        run: sh apache-servicecomb-service-center-2.1.0-linux-amd64/start-service-center.sh
      - name: start zookeeper
        run: bash apache-zookeeper-3.6.3-bin/bin/zkServer.sh start apache-zookeeper-3.6.3-bin/conf/zoo_sample.cfg
      - name: package dubbo 2.6.0 tests
        if: matrix.dubbo-version == '2-6' && matrix.dubbo-versions == '0'
        run: mvn package -Dalibaba.dubbo.version=2.6.${{ matrix.dubbo-versions }} -DskipTests -P260 --file sermant-integration-tests/dubbo-test/pom.xml
      - name: package dubbo 2.6.x tests
        if: matrix.dubbo-version == '2-6' && matrix.dubbo-versions != '0'
        run: mvn package -Dalibaba.dubbo.version=2.6.${{ matrix.dubbo-versions }} -DskipTests --file sermant-integration-tests/dubbo-test/pom.xml
      - name: package dubbo 2.7.x tests
        if: matrix.dubbo-version == '2-7'
        run: mvn package -Ddubbo.version=2.7.${{ matrix.dubbo-versions }} -DskipTests --file sermant-integration-tests/dubbo-test/pom.xml
      - name: start spring and dubbo provider service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.enableSpringRegister: true
          servicecomb.service.openMigration: false
          SERVICE_META_ENVIRONMENT: testing
          SERVER_PORT: 28024
          DUBBO_PROTOCOL_PORT: 28824
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > spring-and-dubbo-provider.log 2>&1 &
      - name: start second spring and dubbo provider service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.enableSpringRegister: true
          servicecomb.service.openMigration: false
          SERVICE_META_ENVIRONMENT: testing
          SERVER_PORT: 28023
          DUBBO_PROTOCOL_PORT: 28823
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > spring-and-dubbo-provider2.log 2>&1 &
      - name: start provider service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.openMigration: false
          SERVER_PORT: 28022
          DUBBO_PROTOCOL_PORT: 28822
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-provider.log 2>&1 &
      - name: start zookeeper provider service
        # dubbo2.7.1和2.7.3在流水环境下，注册到zk时，偶尔启动慢，导致集成测试用例失败，所以跳过
        if: matrix.dubbo-version == '2-6' || (matrix.dubbo-versions != '1' && matrix.dubbo-versions != '3')
        env:
          SERVER_PORT: 28021
          DUBBO_PROTOCOL_PORT: 28821
        run: |
          nohup java -jar sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-zk-provider.log 2>&1 &
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28021/actuator/health 120
      - name: waiting for providers start
        run: |
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28022/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28023/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28024/actuator/health 120
      - name: start spring and dubbo consumer service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.enableSpringRegister: true
          servicecomb.service.openMigration: false
          SERVICE_META_ENVIRONMENT: testing
          SERVER_PORT: 18020
          DUBBO_PROTOCOL_PORT: 18820
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-consumer -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-consumer/target/dubbo-integration-consumer.jar > spring-and-dubbo-consumer.log 2>&1 &
      - name: start consumer service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.openMigration: true
          SERVER_PORT: 28020
          DUBBO_PROTOCOL_PORT: 28820
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-consumer -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-consumer/target/dubbo-integration-consumer.jar > dubbo-consumer.log 2>&1 &
      - name: waiting for consumers start
        run: |
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28020/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:18020/actuator/health 120
      - name: integration test
        env:
          TEST_TYPE: common
        run: mvn -Dcontroller.port=18020 -Ddubbo.running.version=${{ matrix.dubbo-version }}-${{ matrix.dubbo-versions }} test --file sermant-integration-tests/dubbo-test/pom.xml
      - name: if failure then upload error log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: (test-for-dubbo)-(${{ matrix.dubbo-version }}-${{ matrix.dubbo-versions }})-logs
          path: |
            ./*.log
            ./logs/**/*.log
          if-no-files-found: warn
          retention-days: 5
  test-for-dubbo-router:
    name: Test for dubbo router
    runs-on: ubuntu-latest
    needs: [download-and-cache-middlewares, package-and-cache-agent]
    strategy:
      matrix:
        dubbo-version: ['2-6','2-7']
        dubbo-versions: ['0','5','6','7','8','9','10','11','12']
        include:
          - dubbo-version: '2-6'
            dubbo-versions: '1'
          - dubbo-version: '2-6'
            dubbo-versions: '2'
          - dubbo-version: '2-6'
            dubbo-versions: '3'
          - dubbo-version: '2-6'
            dubbo-versions: '4'
          - dubbo-version: '2-6'
            dubbo-versions: '10.1'
          - dubbo-version: '2-7'
            dubbo-versions: '4.1'
          - dubbo-version: '2-7'
            dubbo-versions: '13'
          - dubbo-version: '2-7'
            dubbo-versions: '14'
          - dubbo-version: '2-7'
            dubbo-versions: '15'
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      - name: get middlewares
        uses: actions/cache@v3
        with:
          path: |
            apache-servicecomb-service-center-*/
            apache-zookeeper-*/
            Local-CSE-2.1.3-linux-amd64.zip
          key: ${{ runner.os }}-middlewares-${{ github.run_id }}
      - name: get agent
        uses: actions/cache@v3
        with:
          path: sermant-agent-*/
          key: ${{ runner.os }}-agent-${{ github.run_id }}
      - name: start zookeeper
        run: bash apache-zookeeper-3.6.3-bin/bin/zkServer.sh start apache-zookeeper-3.6.3-bin/conf/zoo_sample.cfg
      - name: start cse
        run: |
          export ROOT_PATH=$(pwd)
          bash ./sermant-integration-tests/scripts/startCse.sh
      - name: package dubbo 2.6.0 tests
        if: matrix.dubbo-version == '2-6' && matrix.dubbo-versions == '0'
        run: mvn package -Dalibaba.dubbo.version=2.6.${{ matrix.dubbo-versions }} -DskipTests -P260 --file sermant-integration-tests/dubbo-test/pom.xml
      - name: package dubbo 2.6.x tests
        if: matrix.dubbo-version == '2-6' && matrix.dubbo-versions != '0'
        run: mvn package -Dalibaba.dubbo.version=2.6.${{ matrix.dubbo-versions }} -DskipTests --file sermant-integration-tests/dubbo-test/pom.xml
      - name: package dubbo 2.7.x tests
        if: matrix.dubbo-version == '2-7'
        run: mvn package -Ddubbo.version=2.7.${{ matrix.dubbo-versions }} -DskipTests --file sermant-integration-tests/dubbo-test/pom.xml
      - name: post config to zookeeper
        run: bash ./sermant-integration-tests/scripts/createStrategy.sh all
      - name: post config to local-cse
        env:
          TEST_TYPE: router-config
        run: mvn test --file sermant-integration-tests/dubbo-test/pom.xml
      - name: start zookeeper provider service
        env:
          SERVICE_META_ZONE: foo
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: true
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: true
          ROUTER_PLUGIN_REQUEST_TAGS: "[Test-Env,Test-Env1]"
          SERVICE_META_PARAMETERS: Test-Env:env-001
          SERVER_PORT: 28021
          DUBBO_PROTOCOL_PORT: 28821
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-zk-provider.log 2>&1 &
      - name: start second zookeeper provider service
        env:
          SERVICE_META_ZONE: foo
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: true
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: true
          ROUTER_PLUGIN_REQUEST_TAGS: "[Test-Env,Test-Env1]"
          SERVICE_META_PARAMETERS: Test-Env:env-002
          SERVER_PORT: 28022
          DUBBO_PROTOCOL_PORT: 28822
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-zk-provider2.log 2>&1 &
      - name: start third zookeeper provider service
        env:
          SERVICE_META_ZONE: bar
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: true
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: true
          ROUTER_PLUGIN_REQUEST_TAGS: "[Test-Env,Test-Env1]"
          SERVICE_META_PARAMETERS: Test-Env1:env-002
          SERVER_PORT: 28023
          DUBBO_PROTOCOL_PORT: 28823
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-zk-provider3.log 2>&1 &
      - name: start fourth zookeeper provider service
        env:
          SERVICE_META_ZONE: bar
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: true
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: true
          ROUTER_PLUGIN_REQUEST_TAGS: "[Test-Env,Test-Env1]"
          SERVER_PORT: 28024
          DUBBO_PROTOCOL_PORT: 28824
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-zk-provider4.log 2>&1 &
      - name: start zookeeper consumer service
        env:
          SERVICE_META_ZONE: bar
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: true
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: true
          ROUTER_PLUGIN_REQUEST_TAGS: "[Test-Env,Test-Env1]"
          SERVER_PORT: 28020
          DUBBO_PROTOCOL_PORT: 28820
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-consumer -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-consumer/target/dubbo-integration-consumer.jar > zookeeper-consumer.log 2>&1 &
      - name: waiting for zookeeper services start
        run: |
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28020/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28021/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28022/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28023/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:28024/actuator/health 120
      - name: start cse provider service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.enableSpringRegister: true
          dynamic.config.dynamicConfigType: KIE
          dynamic.config.serverAddress: 127.0.0.1:30110
          SERVICE_META_ENVIRONMENT: development
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: false
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: false
          SERVICE_META_VERSION: 1.0.0
          SERVER_PORT: 18021
          DUBBO_PROTOCOL_PORT: 18821
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-cse-provider.log 2>&1 &
      - name: start second cse provider service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.enableSpringRegister: true
          dynamic.config.dynamicConfigType: KIE
          dynamic.config.serverAddress: 127.0.0.1:30110
          SERVICE_META_ENVIRONMENT: development
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: false
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: false
          SERVICE_META_PARAMETERS: group:gray
          SERVICE_META_VERSION: 1.0.1
          SERVER_PORT: 18022
          DUBBO_PROTOCOL_PORT: 18822
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-provider -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-provider/target/dubbo-integration-provider.jar > dubbo-cse-provider2.log 2>&1 &
      - name: waiting for cse providers start
        run: |
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:18022/actuator/health 120
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:18021/actuator/health 120
      - name: start cse consumer service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.enableSpringRegister: true
          dynamic.config.dynamicConfigType: KIE
          dynamic.config.serverAddress: 127.0.0.1:30110
          SERVICE_META_ENVIRONMENT: development
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: false
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: false
          SERVER_PORT: 18020
          DUBBO_PROTOCOL_PORT: 18820
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-consumer -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-consumer/target/dubbo-integration-consumer.jar > cse-consumer.log 2>&1 &
      - name: waiting for cse consumer start
        run: |
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:18020/actuator/health 120
      - name: start cse controller service
        env:
          servicecomb.service.enableDubboRegister: true
          servicecomb.service.enableSpringRegister: true
          dynamic.config.dynamicConfigType: KIE
          dynamic.config.serverAddress: 127.0.0.1:30110
          SERVICE_META_ENVIRONMENT: development
          ROUTER_PLUGIN_ENABLED_DUBBO_ZONE_ROUTER: false
          ROUTER_PLUGIN_USE_REQUEST_ROUTER: false
          SERVER_PORT: 18019
        run: |
          nohup java -javaagent:sermant-agent-1.0.0/agent/sermant-agent.jar=appName=dubbo-integration-controller -jar \
          sermant-integration-tests/dubbo-test/dubbo-${{ matrix.dubbo-version }}-integration-controller/target/dubbo-integration-controller.jar > cse-controller.log 2>&1 &
      - name: waiting for cse controller start
        run: |
          bash ./sermant-integration-tests/scripts/checkService.sh http://127.0.0.1:18019/actuator/health 120
      - name: integration test
        env:
          TEST_TYPE: router
        run: mvn -Dcontroller.port=18019 test --file sermant-integration-tests/dubbo-test/pom.xml
      - name: if failure then upload error log
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: (test-for-dubbo-router)-(${{ matrix.dubbo-version }}-${{ matrix.dubbo-versions }})-logs
          path: |
            ./*.log
            ./logs/**/*.log
          if-no-files-found: warn
          retention-days: 5