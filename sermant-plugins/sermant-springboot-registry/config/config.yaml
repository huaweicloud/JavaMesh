# consul discovery configuration
sermant.springboot.registry:
  # Whether to enable the boot registration feature
  enableRegistry: false
  # Matching domains, The current version takes effect only for scenarios where the URL is
  # http://${realmName}/serviceName/api/xx
  realmName: www.domain.com
  # Whether to enable traffic statistics, after it is enabled, the traffic entering the plug-in will be printed every time
  enableRequestCount: false

sermant.springboot.registry.lb:
  # The type of the registry center, currently supports Nacos and Zookeeper
  registryCenterType:
  # The load balancer type currently supports RoundRobin、Random、WeightedResponseTime、
  # BestAvailable(Minimum number of concurrent transactions)
  lbType: RoundRobin
  # Address of the registry
  registryAddress: 127.0.0.1:2181
  # The expiration time of the instance, in seconds, will never expire if <=0
  instanceCacheExpireTime: 0
  # The instance refresh time, in seconds, must be less than that instanceCacheExpireTime
  instanceRefreshInterval: 0
  # Check the interval of the instance regularly to determine whether the instance has expired. If it is greater than
  # instanceRefreshInterval, the value is set to instanceRefreshInterval
  refreshTimerInterval: 5
  # Against {@link java.net.SocketTimeoutException}： Do I need to retry read timed out? It is enabled by default
  enableSocketReadTimeoutRetry: true
  # Same as above, mainly for connect timed out, usually thrown upstream and downstream when the connection is not upstream
  enableSocketConnectTimeoutRetry: true
  # For retry scenarios, for {@link java.util.concurrent.TimeoutException}, whether you need to retry, which is enabled
  # by default, and this timeout is mostly used in asynchronous scenarios, such as Future, MinimalHttpAsyncClient
  enableTimeoutExRetry: true

nacos.service:
  # nacos verifies accounts
  username: "nacos"
  # nacos verifies password
  password: "nacos"
  # Namespace, the nacos configuration creates the id value of the namespace
  namespace: "sermant"
  # Service instance weight value
  weight: 1
  # Cluster name
  clusterName: DEFAULT
  # Whether it is a temporary node. The value can be true or false
  ephemeral: true
