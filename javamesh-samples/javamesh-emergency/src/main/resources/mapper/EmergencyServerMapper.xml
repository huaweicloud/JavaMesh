<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.emergency.mapper.EmergencyServerMapper">
  <resultMap id="BaseResultMap" type="com.huawei.emergency.entity.EmergencyServer">
    <id column="server_id" jdbcType="INTEGER" property="serverId" />
    <result column="server_name" jdbcType="VARCHAR" property="serverName" />
    <result column="server_user" jdbcType="VARCHAR" property="serverUser" />
    <result column="server_ip" jdbcType="VARCHAR" property="serverIp" />
    <result column="server_port" jdbcType="INTEGER" property="serverPort" />
    <result column="have_password" jdbcType="VARCHAR" property="havePassword" />
    <result column="password_mode" jdbcType="VARCHAR" property="passwordMode" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_valid" jdbcType="VARCHAR" property="isValid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    server_id, server_name, server_user, server_ip, server_port, have_password, password_mode, 
    password, create_user, create_time, update_time, is_valid
  </sql>
  <select id="selectByExample" parameterType="com.huawei.emergency.entity.EmergencyServerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from emergency_server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from emergency_server
    where server_id = #{serverId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from emergency_server
    where server_id = #{serverId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.huawei.emergency.entity.EmergencyServerExample">
    delete from emergency_server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.huawei.emergency.entity.EmergencyServer">
    <selectKey keyProperty="serverId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into emergency_server (server_name, server_user, server_ip, 
      server_port, have_password, password_mode, 
      password, create_user, create_time, 
      update_time, is_valid)
    values (#{serverName,jdbcType=VARCHAR}, #{serverUser,jdbcType=VARCHAR}, #{serverIp,jdbcType=VARCHAR}, 
      #{serverPort,jdbcType=INTEGER}, #{havePassword,jdbcType=VARCHAR}, #{passwordMode,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isValid,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.huawei.emergency.entity.EmergencyServer">
    <selectKey keyProperty="serverId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into emergency_server
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serverName != null">
        server_name,
      </if>
      <if test="serverUser != null">
        server_user,
      </if>
      <if test="serverIp != null">
        server_ip,
      </if>
      <if test="serverPort != null">
        server_port,
      </if>
      <if test="havePassword != null">
        have_password,
      </if>
      <if test="passwordMode != null">
        password_mode,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serverName != null">
        #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="serverUser != null">
        #{serverUser,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverPort != null">
        #{serverPort,jdbcType=INTEGER},
      </if>
      <if test="havePassword != null">
        #{havePassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordMode != null">
        #{passwordMode,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.huawei.emergency.entity.EmergencyServerExample" resultType="java.lang.Long">
    select count(*) from emergency_server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update emergency_server
    <set>
      <if test="record.serverId != null">
        server_id = #{record.serverId,jdbcType=INTEGER},
      </if>
      <if test="record.serverName != null">
        server_name = #{record.serverName,jdbcType=VARCHAR},
      </if>
      <if test="record.serverUser != null">
        server_user = #{record.serverUser,jdbcType=VARCHAR},
      </if>
      <if test="record.serverIp != null">
        server_ip = #{record.serverIp,jdbcType=VARCHAR},
      </if>
      <if test="record.serverPort != null">
        server_port = #{record.serverPort,jdbcType=INTEGER},
      </if>
      <if test="record.havePassword != null">
        have_password = #{record.havePassword,jdbcType=VARCHAR},
      </if>
      <if test="record.passwordMode != null">
        password_mode = #{record.passwordMode,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update emergency_server
    set server_id = #{record.serverId,jdbcType=INTEGER},
      server_name = #{record.serverName,jdbcType=VARCHAR},
      server_user = #{record.serverUser,jdbcType=VARCHAR},
      server_ip = #{record.serverIp,jdbcType=VARCHAR},
      server_port = #{record.serverPort,jdbcType=INTEGER},
      have_password = #{record.havePassword,jdbcType=VARCHAR},
      password_mode = #{record.passwordMode,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_valid = #{record.isValid,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.huawei.emergency.entity.EmergencyServer">
    update emergency_server
    <set>
      <if test="serverName != null">
        server_name = #{serverName,jdbcType=VARCHAR},
      </if>
      <if test="serverUser != null">
        server_user = #{serverUser,jdbcType=VARCHAR},
      </if>
      <if test="serverIp != null">
        server_ip = #{serverIp,jdbcType=VARCHAR},
      </if>
      <if test="serverPort != null">
        server_port = #{serverPort,jdbcType=INTEGER},
      </if>
      <if test="havePassword != null">
        have_password = #{havePassword,jdbcType=VARCHAR},
      </if>
      <if test="passwordMode != null">
        password_mode = #{passwordMode,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=VARCHAR},
      </if>
    </set>
    where server_id = #{serverId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.huawei.emergency.entity.EmergencyServer">
    update emergency_server
    set server_name = #{serverName,jdbcType=VARCHAR},
      server_user = #{serverUser,jdbcType=VARCHAR},
      server_ip = #{serverIp,jdbcType=VARCHAR},
      server_port = #{serverPort,jdbcType=INTEGER},
      have_password = #{havePassword,jdbcType=VARCHAR},
      password_mode = #{passwordMode,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_valid = #{isValid,jdbcType=VARCHAR}
    where server_id = #{serverId,jdbcType=INTEGER}
  </update>
</mapper>